# Server Side
<br>
import socket
import threading
HOST = '127.0.0.1'
PORT = 12345
server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server_socket.bind((HOST, PORT))
server_socket.listen()
clients = []
def broadcast(message, client_socket):
    for client in clients:
        if client != client_socket:
            try:
                client.send(message)
            except:
                clients.remove(client)
def handle_client(client_socket):
    while True:
        try:
            message = client_socket.recv(1024)
            if not message:
                clients.remove(client_socket)
                break
            else:
                broadcast(message, client_socket)
        except:
            clients.remove(client_socket)
            break
while True:
    client_socket, client_address = server_socket.accept()
    clients.append(client_socket)
    print(f"Connected with {client_address}")
    client_thread = threading.Thread(target=handle_client, args=(client_socket,))
    client_thread.start()
<br>
# Client Side
<br>
import socket
import threading
HOST = '127.0.0.1'
PORT = 12345
client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
client_socket.connect((HOST, PORT))
def send_message():
    while True:
        message = input()
        client_socket.send(message.encode('utf-8'))
def receive_message():
    while True:
        try:
            message = client_socket.recv(1024)
            print(message.decode('utf-8'))
        except:
            print("An error occurred.")
            client_socket.close()
            break
send_thread = threading.Thread(target=send_message)
receive_thread = threading.Thread(target=receive_message)
send_thread.start()
receive_thread.start()

